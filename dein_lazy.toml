# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# on_event = 'InsertEnter'
# hook_add = '''
#   let g:deoplete#enable_at_startup   = 1
#   let g:deoplete#auto_complete_delay = 0
#   inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
# '''

[[plugins]]
repo ='Shougo/defx.nvim'
on_cmd = 'Defx'
depends = ['defx-icons', 'defx-git']
hook_add = '''
  nnoremap <silent> <Space>f :<C-u>Defx -split=vertical -winwidth=40 -direction=topleft -listed -resume -buffer-name=tab`tabpagenr()`<CR>
'''
hook_source = '''
  function! Root(path) abort
    return fnamemodify(a:path, ':t')
  endfunction
  call defx#custom#source('file', {
      \ 'root': 'Root',
      \})
  call defx#custom#column('filename', {
      \ 'directory_icon': '+',
      \ 'opened_icon': '-'
      \ })
  call defx#custom#column('mark', {
      \ 'readonly_icon': '[ro]',
      \ 'selected_icon': '->'
      \ })
  call defx#custom#option('_', {
      \ 'columns': 'indent:git:icons:filename',
      \ 'show_ignored_files': 1,
      \ })
'''

[plugins.ftplugin]
defx = '''
  nnoremap <silent><buffer><expr> ~ defx#async_action('cd')
  nnoremap <silent><buffer><expr> h defx#async_action('cd', ['..'])
  nnoremap <silent><buffer><expr> j line('.') == line('$') ? 'gg' : 'j'
  nnoremap <silent><buffer><expr> k line('.') == 1 ? 'G' : 'k'
  nnoremap <silent><buffer><expr> l defx#async_action('open_or_close_tree')
  nnoremap <silent><buffer><expr> . defx#do_action('toggle_ignored_files')
  nnoremap <silent><buffer><expr> <Tab> winnr('$') != 1 ? ':<C-u>wincmd w<CR>' : ':<C-u>Defx -buffer-name=temp -split=vertical<CR>'
  nnoremap <silent><buffer><expr> <Space> defx#do_action('toggle_select') . 'j'
  nnoremap <silent><buffer><expr> <CR> defx#do_action('open', 'vsplit')
  nnoremap <silent><buffer><expr> q defx#do_action('quit')
  nnoremap <silent><buffer><expr> o defx#async_action('open_or_close_tree')
  nnoremap <silent><buffer><expr> O defx#async_action('open_tree_recursive')
  nnoremap <silent><buffer><expr> ! defx#do_action('execute_command')
  nnoremap <silent><buffer><expr> * defx#do_action('toggle_select_all')
  nnoremap <silent><buffer><expr> <C-g> defx#do_action('print')
  nnoremap <silent><buffer><expr> <C-l> defx#do_action('redraw')
  nnoremap <silent><buffer><expr> sp defx#do_action('open', 'split')
  nnoremap <silent><buffer><expr> sv defx#do_action('open', 'vsplit')
  nnoremap <silent><buffer><expr> tn defx#do_action('open', 'tabenew')
  nnoremap <silent><buffer><expr> nd defx#do_action('new_directory')
  nnoremap <silent><buffer><expr> nm defx#do_action('new_multiple_files')
  nnoremap <silent><buffer><expr> n defx#do_action('new_file')
  nnoremap <silent><buffer><expr> P defx#do_action('open', 'pedit')
  nnoremap <silent><buffer><expr> S defx#do_action('toggle_sort', 'Time')
  nnoremap <silent><buffer><expr> c defx#do_action('copy')
  nnoremap <silent><buffer><expr> D defx#do_action('remove_trash')
  nnoremap <silent><buffer><expr> m defx#do_action('move')
  nnoremap <silent><buffer><expr> p defx#do_action('paste')
  nnoremap <silent><buffer><expr> r defx#do_action('rename')
  nnoremap <silent><buffer><expr> se defx#do_action('save_session')
  nnoremap <silent><buffer><expr> sr defx#do_action('load_session')
  nnoremap <silent><buffer><expr> x defx#do_action('execute_system')
  nnoremap <silent><buffer><expr> yy defx#do_action('yank_path')
  nnoremap <silent><buffer><expr> sl ':<C-u>wincmd w<CR>'
  nnoremap <silent><buffer><expr> sj ':<C-u>wincmd j<CR>'
'''

[[plugins]]
repo = 'kristijanhusak/defx-icons'

[[plugins]]
repo ='kristijanhusak/defx-git'
hook_add = '''
  let g:defx_git#indicators = {
    \ 'Modified'  : '+',
    \ 'Staged'    : '●',
    \ 'Untracked' : '?',
    \ 'Renamed'   : '➜',
    \ 'Unmerged'  : '═',
    \ 'Deleted'   : 'x',
    \ 'Unknown'   : '?'
    \ }
'''

